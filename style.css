/* Root */

:root {

    --white: hsl(0, 0%, 100%);
    --black: hsl(0, 0%, 0%);
    --grey: hsl(0, 0%, 20%);
    --yellow: hsl(34, 100%, 58%);
    --light-yellow: hsl(36, 100%, 63%);
    --purple: hsl(277, 100%, 58%);
    --light-purple: hsl(284, 100%, 63%);
    --blue: hsl(212, 100%, 58%);
    --light-blue: hsl(205, 100%, 63%);
    --red: hsl(0, 100%, 63%);
    --light-red: hsl(0, 100%, 72%);
    --green : hsl(140, 82%, 53%);
    --light-green : hsl(137, 100%, 63%);

    --ff-body: 'HK Grotesk', sans-serif;
    --ff-accent: 'Monument Extended', sans-serif;

    --fw-regular: 400;
    --fw-bold: 700;
    --fw-extrabold: 800;

    --fs-400: 1rem;
    --fs-500: 1.5rem;
    --fs-600: 2rem;
    --fs-700: 3rem;
    --fs-800: 6rem;
}

/* Reset */

/* 1. Use a more-intuitive box-sizing model.*/

*, *::before, *::after {
    box-sizing: border-box;
}

/* 2. Remove default margin */

* {
    margin: 0;
}

/* 3. Allow percentage-based heights in the application */

html, body {
    height: 100%;
}

/* 4. Add accessible line-height */
/* 5. Improve text rendering */

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

/* 7. Remove built-in form typography styles */

input, button, textarea, select {
    font: inherit;
}

/* 8. Avoid text overflows */

p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

/* 9. Create a root stacking context */

#root, #__next {
    isolation: isolate;
}

/* General styles */

body {
    font-family: var(--ff-body);
    font-size: var(--fs-400);
    font-weight: var(--fw-regular);
    font-size: var(--fs-400);
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    overflow: hidden;
    transition: 1s;
}

.Byellow{
    background-color: var(--light-yellow);
}

.Bgreen{
    background-color: var(--light-green);
}

.Bblue{
    background-color: var(--light-blue);
}

.container-title {
    width: 100vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    line-height: 5rem;
    padding-top: 2.5rem;
}
.container-title .title {
    font-size: var(--fs-800);
    font-weight: var(--fw-extrabold);
}

.container-title .subtitle {
    font-weight: var(--fw-bold);
    font-size: var(--fs-600);
}

.container-stickers {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    flex-shrink: 1;
    gap: min(30rem, 30vw);
}

.container-button {
    display: flex;
    align-items: center;
    padding: min(10rem, 10vh) 0;
}

.container-button .button-start {
    transition: .3s;
    margin: 0 auto;
    border: none;
    border-radius: 100vmax;
    background-color: var(--black);
    color: var(--white);
    font-family: var(--ff-accent);
    font-weight: var(--fw-extrabold);
    font-size: var(--fs-700);
    padding: 1rem 2rem;
    overflow: hidden;
    pointer-events: auto;
    cursor: pointer;
}

@media screen and (max-width: 40em) {
    .container-button .button-start {
        font-size: var(--fs-600);
        margin: 0 auto;
    }

    .container-stickers {
        margin: 5rem auto;
    }
}

.container-button .button-start:is(:hover, :focus) {
    transform: scale(1.1);
}

.sticker {
    width: min(250px, 25vw);
    height: min(250px, 25vw);
    transition: .5s;
}

.peach-sticker:is(:hover, :focus) {
    transform: rotate(20deg) translate(30px, -30px);
}

.eggplant-sticker:is(:hover, :focus) {
    transform: rotate(-20deg) translate(-30px, -30px);
}

.bg {
    position: absolute;
    width: 100%;
    height: 100vh;
    z-index: -1;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-content: center;
}

.bg > * {  
    width: 50vh;
    height: 50vh;
    border-radius: 50%;
    transition: 1s;
}

.C_yellow > *{
    background: var(--yellow);
}

.C_blue > * {
    background: var(--blue);
}

.C_green > *{
    background: var(--green);
}

.expli-memory {
    position: absolute;
    width: 100%;
    height: 100%;
    display: none;
}

/* Memory test */

.container-memory {
    position: absolute;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    align-items: center;
    justify-items: center;
}

.container-memory .carte {
    width: min(13rem, 30vh);
    aspect-ratio: 1;
    background-color: var(--grey);
    border: var(--white) solid 5px;
    border-radius: 40px;
    cursor:pointer;
}

.container-memory .carte-invisible {
    width: min(13rem, 30vh);
    aspect-ratio: 1;
    background-color: var(--grey);
    border: var(--white) solid 5px;
    border-radius: 40px;
    display:hidden;
}

.container-memory .carte .face {
    width: min(13rem, 30vh);
    aspect-ratio: 1;
    background-color: var(--grey);
    border: var(--white) solid 5px;
    border-radius: 40px;
    display: none;
}

.container-memory .carte .face-visible {
    width: min(13rem, 30vh);
    aspect-ratio: 1;
    background-color: var(--grey);
    border: var(--white) solid 5px;
    border-radius: 40px;
    display: block;
}

/* Changement fait sur la selection des jeux */
#choix
{
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    transform: translate(-50%, -50%);
    font-size: 24px;
    font-weight: bold;
    text-align: center;
    color: white;
    width: 260px;
    height: 200px;
    list-style: none;
}
#choix .background
{
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

#choix .background .changement_button
{
    width: 20rem;
    padding: 0.5rem;
    border-radius: 40px;
    background-color: var(--black);
    transition: .3s;
    cursor:pointer;
}

#choix .background .changement_button:hover
{
    transform: scale(1.1);
}

/* Changement sur les bouttons de choix des jeux*/
.changement_button
{
    color: white;
    background-color: black;
    border: none;
}

/* Active et rend inactive une div utiliser avec du JS*/
.inactive
{
    display: none;
}

.active
{
    display: block;
}